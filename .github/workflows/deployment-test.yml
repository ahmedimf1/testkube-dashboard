name: Test Docker image

on:
  push:
    tags:
      - "v*.*.*"
      - "v*.*.*-*"


jobs:
  build_multi_platform_images:
    name: Build and push Docker image to Docker Hub
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: "arm64"
            path: arm64v8/nginx:1.22-alpine
          - name: "amd64"
            path: nginx:alpine
#    strategy:
#      matrix:
#        include:
#          - name: "arm64"
#            path: arm64
#          - name: "amd64"
#            path: amd64

    steps:
      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          # Optionally strip `v` prefix
          strip_v: true

      - name: Use tag
        run: echo ${{steps.tag.outputs.tag}}

      - name: Check out GitHub repo
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: ${{ matrix.name }}
          driver-opts: |
            image=moby/buildkit:v0.9.3

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image and push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          build-args: |
            TARGET=${{ matrix.path }}
            REACT_APP_GOOGLE_ANALYTICS_ID=${{ secrets.REACT_APP_GOOGLE_ANALYTICS_ID }}
            REACT_APP_SEGMENT_WRITE_KEY=${{ secrets.REACT_APP_SEGMENT_WRITE_KEY }}
          tags: ${{ github.repository }}:${{steps.tag.outputs.tag}}-${{ matrix.name }}
          push: true


  create_manifest:
    needs: build_multi_platform_images
    runs-on: ubuntu-latest
    steps:
      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          # Optionally strip `v` prefix
          strip_v: true

      - name: Use tag
        run: echo ${{steps.tag.outputs.tag}}

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create and push manifest images
        uses: Noelware/docker-manifest-action@master # or use whatever version.
        with:
          base-image: ${{ github.repository }}:${{steps.tag.outputs.tag}}
          extra-images: ${{ github.repository }}:${{steps.tag.outputs.tag}}-arm64,${{ github.repository }}:${{steps.tag.outputs.tag}}-amd64
          push: true

      - name: Create Docker manifest and push multi-arch image to Registry
        run: |
          docker manifest create ${{ github.repository }}:${{steps.tag.outputs.tag}} --amend ${{ github.repository }}:${{steps.tag.outputs.tag}}-arm64 --amend ${{ github.repository }}:${{steps.tag.outputs.tag}}-amd64
          docker manifest push -p ${{ github.repository }}:${{steps.tag.outputs.tag}}

          docker manifest create ${{ github.repository }}:latest --amend ${{ github.repository }}:${{steps.tag.outputs.tag}}-arm64 --amend ${{ github.repository }}:${{steps.tag.outputs.tag}}-amd64
          docker manifest push -p ${{ github.repository }}:latest

